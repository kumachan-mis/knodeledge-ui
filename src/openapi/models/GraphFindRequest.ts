/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request Parameters for Graph Find API
 * @export
 * @interface GraphFindRequest
 */
export interface GraphFindRequest {
  /**
   * User ID
   * @type {string}
   * @memberof GraphFindRequest
   */
  userId: string;
  /**
   * Auto-generated project ID
   * @type {string}
   * @memberof GraphFindRequest
   */
  projectId: string;
  /**
   * Auto-generated chapter ID
   * @type {string}
   * @memberof GraphFindRequest
   */
  chapterId: string;
  /**
   * Auto-generated section ID
   * @type {string}
   * @memberof GraphFindRequest
   */
  sectionId: string;
}

/**
 * Check if a given object implements the GraphFindRequest interface.
 */
export function instanceOfGraphFindRequest(value: object): value is GraphFindRequest {
  if (!('userId' in value) || value['userId'] === undefined) return false;
  if (!('projectId' in value) || value['projectId'] === undefined) return false;
  if (!('chapterId' in value) || value['chapterId'] === undefined) return false;
  if (!('sectionId' in value) || value['sectionId'] === undefined) return false;
  return true;
}

export function GraphFindRequestFromJSON(json: any): GraphFindRequest {
  return GraphFindRequestFromJSONTyped(json, false);
}

export function GraphFindRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphFindRequest {
  if (json == null) {
    return json;
  }
  return {
    userId: json['userId'],
    projectId: json['projectId'],
    chapterId: json['chapterId'],
    sectionId: json['sectionId'],
  };
}

export function GraphFindRequestToJSON(json: any): GraphFindRequest {
  return GraphFindRequestToJSONTyped(json, false);
}

export function GraphFindRequestToJSONTyped(
  value?: GraphFindRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    userId: value['userId'],
    projectId: value['projectId'],
    chapterId: value['chapterId'],
    sectionId: value['sectionId'],
  };
}
