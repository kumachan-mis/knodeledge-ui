/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectOnlyId } from './ProjectOnlyId';
import {
  ProjectOnlyIdFromJSON,
  ProjectOnlyIdFromJSONTyped,
  ProjectOnlyIdToJSON,
  ProjectOnlyIdToJSONTyped,
} from './ProjectOnlyId';
import type { SectionOnlyId } from './SectionOnlyId';
import {
  SectionOnlyIdFromJSON,
  SectionOnlyIdFromJSONTyped,
  SectionOnlyIdToJSON,
  SectionOnlyIdToJSONTyped,
} from './SectionOnlyId';
import type { ChapterOnlyId } from './ChapterOnlyId';
import {
  ChapterOnlyIdFromJSON,
  ChapterOnlyIdFromJSONTyped,
  ChapterOnlyIdToJSON,
  ChapterOnlyIdToJSONTyped,
} from './ChapterOnlyId';
import type { UserOnlyId } from './UserOnlyId';
import { UserOnlyIdFromJSON, UserOnlyIdFromJSONTyped, UserOnlyIdToJSON, UserOnlyIdToJSONTyped } from './UserOnlyId';

/**
 * Request Body for Graph Delete API
 * @export
 * @interface GraphDeleteRequest
 */
export interface GraphDeleteRequest {
  /**
   *
   * @type {UserOnlyId}
   * @memberof GraphDeleteRequest
   */
  user: UserOnlyId;
  /**
   *
   * @type {ProjectOnlyId}
   * @memberof GraphDeleteRequest
   */
  project: ProjectOnlyId;
  /**
   *
   * @type {ChapterOnlyId}
   * @memberof GraphDeleteRequest
   */
  chapter: ChapterOnlyId;
  /**
   *
   * @type {SectionOnlyId}
   * @memberof GraphDeleteRequest
   */
  section: SectionOnlyId;
}

/**
 * Check if a given object implements the GraphDeleteRequest interface.
 */
export function instanceOfGraphDeleteRequest(value: object): value is GraphDeleteRequest {
  if (!('user' in value) || value['user'] === undefined) return false;
  if (!('project' in value) || value['project'] === undefined) return false;
  if (!('chapter' in value) || value['chapter'] === undefined) return false;
  if (!('section' in value) || value['section'] === undefined) return false;
  return true;
}

export function GraphDeleteRequestFromJSON(json: any): GraphDeleteRequest {
  return GraphDeleteRequestFromJSONTyped(json, false);
}

export function GraphDeleteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphDeleteRequest {
  if (json == null) {
    return json;
  }
  return {
    user: UserOnlyIdFromJSON(json['user']),
    project: ProjectOnlyIdFromJSON(json['project']),
    chapter: ChapterOnlyIdFromJSON(json['chapter']),
    section: SectionOnlyIdFromJSON(json['section']),
  };
}

export function GraphDeleteRequestToJSON(json: any): GraphDeleteRequest {
  return GraphDeleteRequestToJSONTyped(json, false);
}

export function GraphDeleteRequestToJSONTyped(
  value?: GraphDeleteRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    user: UserOnlyIdToJSON(value['user']),
    project: ProjectOnlyIdToJSON(value['project']),
    chapter: ChapterOnlyIdToJSON(value['chapter']),
    section: SectionOnlyIdToJSON(value['section']),
  };
}
