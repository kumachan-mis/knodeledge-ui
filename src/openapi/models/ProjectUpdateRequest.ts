/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Project } from './Project';
import { ProjectFromJSON, ProjectFromJSONTyped, ProjectToJSON, ProjectToJSONTyped } from './Project';
import type { UserOnlyId } from './UserOnlyId';
import { UserOnlyIdFromJSON, UserOnlyIdFromJSONTyped, UserOnlyIdToJSON, UserOnlyIdToJSONTyped } from './UserOnlyId';

/**
 * Request Body for Project Update API
 * @export
 * @interface ProjectUpdateRequest
 */
export interface ProjectUpdateRequest {
  /**
   *
   * @type {UserOnlyId}
   * @memberof ProjectUpdateRequest
   */
  user: UserOnlyId;
  /**
   *
   * @type {Project}
   * @memberof ProjectUpdateRequest
   */
  project: Project;
}

/**
 * Check if a given object implements the ProjectUpdateRequest interface.
 */
export function instanceOfProjectUpdateRequest(value: object): value is ProjectUpdateRequest {
  if (!('user' in value) || value['user'] === undefined) return false;
  if (!('project' in value) || value['project'] === undefined) return false;
  return true;
}

export function ProjectUpdateRequestFromJSON(json: any): ProjectUpdateRequest {
  return ProjectUpdateRequestFromJSONTyped(json, false);
}

export function ProjectUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectUpdateRequest {
  if (json == null) {
    return json;
  }
  return {
    user: UserOnlyIdFromJSON(json['user']),
    project: ProjectFromJSON(json['project']),
  };
}

export function ProjectUpdateRequestToJSON(json: any): ProjectUpdateRequest {
  return ProjectUpdateRequestToJSONTyped(json, false);
}

export function ProjectUpdateRequestToJSONTyped(
  value?: ProjectUpdateRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    user: UserOnlyIdToJSON(value['user']),
    project: ProjectToJSON(value['project']),
  };
}
