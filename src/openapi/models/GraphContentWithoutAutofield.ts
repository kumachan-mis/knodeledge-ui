/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GraphChild } from './GraphChild';
import { GraphChildFromJSON, GraphChildFromJSONTyped, GraphChildToJSON, GraphChildToJSONTyped } from './GraphChild';

/**
 * Graph object with only content fields without auto-generated fields
 * @export
 * @interface GraphContentWithoutAutofield
 */
export interface GraphContentWithoutAutofield {
  /**
   * Graph paragraph
   * @type {string}
   * @memberof GraphContentWithoutAutofield
   */
  paragraph: string;
  /**
   *
   * @type {Array<GraphChild>}
   * @memberof GraphContentWithoutAutofield
   */
  children?: Array<GraphChild>;
}

/**
 * Check if a given object implements the GraphContentWithoutAutofield interface.
 */
export function instanceOfGraphContentWithoutAutofield(value: object): value is GraphContentWithoutAutofield {
  if (!('paragraph' in value) || value['paragraph'] === undefined) return false;
  return true;
}

export function GraphContentWithoutAutofieldFromJSON(json: any): GraphContentWithoutAutofield {
  return GraphContentWithoutAutofieldFromJSONTyped(json, false);
}

export function GraphContentWithoutAutofieldFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GraphContentWithoutAutofield {
  if (json == null) {
    return json;
  }
  return {
    paragraph: json['paragraph'],
    children: json['children'] == null ? undefined : (json['children'] as Array<any>).map(GraphChildFromJSON),
  };
}

export function GraphContentWithoutAutofieldToJSON(json: any): GraphContentWithoutAutofield {
  return GraphContentWithoutAutofieldToJSONTyped(json, false);
}

export function GraphContentWithoutAutofieldToJSONTyped(
  value?: GraphContentWithoutAutofield | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    paragraph: value['paragraph'],
    children: value['children'] == null ? undefined : (value['children'] as Array<any>).map(GraphChildToJSON),
  };
}
