/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SectionOfChapter } from './SectionOfChapter';
import {
  SectionOfChapterFromJSON,
  SectionOfChapterFromJSONTyped,
  SectionOfChapterToJSON,
  SectionOfChapterToJSONTyped,
} from './SectionOfChapter';

/**
 * ChapterWithSections object
 * @export
 * @interface ChapterWithSections
 */
export interface ChapterWithSections {
  /**
   * Auto-generated chapter ID
   * @type {string}
   * @memberof ChapterWithSections
   */
  id: string;
  /**
   * Chapter name
   * @type {string}
   * @memberof ChapterWithSections
   */
  name: string;
  /**
   * Chapter number
   * @type {number}
   * @memberof ChapterWithSections
   */
  number: number;
  /**
   *
   * @type {Array<SectionOfChapter>}
   * @memberof ChapterWithSections
   */
  sections: Array<SectionOfChapter>;
}

/**
 * Check if a given object implements the ChapterWithSections interface.
 */
export function instanceOfChapterWithSections(value: object): value is ChapterWithSections {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('name' in value) || value['name'] === undefined) return false;
  if (!('number' in value) || value['number'] === undefined) return false;
  if (!('sections' in value) || value['sections'] === undefined) return false;
  return true;
}

export function ChapterWithSectionsFromJSON(json: any): ChapterWithSections {
  return ChapterWithSectionsFromJSONTyped(json, false);
}

export function ChapterWithSectionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChapterWithSections {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    name: json['name'],
    number: json['number'],
    sections: (json['sections'] as Array<any>).map(SectionOfChapterFromJSON),
  };
}

export function ChapterWithSectionsToJSON(json: any): ChapterWithSections {
  return ChapterWithSectionsToJSONTyped(json, false);
}

export function ChapterWithSectionsToJSONTyped(
  value?: ChapterWithSections | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    name: value['name'],
    number: value['number'],
    sections: (value['sections'] as Array<any>).map(SectionOfChapterToJSON),
  };
}
