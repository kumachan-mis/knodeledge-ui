/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Paper } from './Paper';
import { PaperFromJSON, PaperFromJSONTyped, PaperToJSON } from './Paper';
import type { ProjectOnlyId } from './ProjectOnlyId';
import { ProjectOnlyIdFromJSON, ProjectOnlyIdFromJSONTyped, ProjectOnlyIdToJSON } from './ProjectOnlyId';
import type { UserOnlyId } from './UserOnlyId';
import { UserOnlyIdFromJSON, UserOnlyIdFromJSONTyped, UserOnlyIdToJSON } from './UserOnlyId';

/**
 * Request Body for Paper Update API
 * @export
 * @interface PaperUpdateRequest
 */
export interface PaperUpdateRequest {
  /**
   *
   * @type {UserOnlyId}
   * @memberof PaperUpdateRequest
   */
  user: UserOnlyId;
  /**
   *
   * @type {ProjectOnlyId}
   * @memberof PaperUpdateRequest
   */
  project: ProjectOnlyId;
  /**
   *
   * @type {Paper}
   * @memberof PaperUpdateRequest
   */
  paper: Paper;
}

/**
 * Check if a given object implements the PaperUpdateRequest interface.
 */
export function instanceOfPaperUpdateRequest(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'user' in value;
  isInstance = isInstance && 'project' in value;
  isInstance = isInstance && 'paper' in value;

  return isInstance;
}

export function PaperUpdateRequestFromJSON(json: any): PaperUpdateRequest {
  return PaperUpdateRequestFromJSONTyped(json, false);
}

export function PaperUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaperUpdateRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    user: UserOnlyIdFromJSON(json['user']),
    project: ProjectOnlyIdFromJSON(json['project']),
    paper: PaperFromJSON(json['paper']),
  };
}

export function PaperUpdateRequestToJSON(value?: PaperUpdateRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    user: UserOnlyIdToJSON(value.user),
    project: ProjectOnlyIdToJSON(value.project),
    paper: PaperToJSON(value.paper),
  };
}
