/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectOnlyIdError } from './ProjectOnlyIdError';
import {
  ProjectOnlyIdErrorFromJSON,
  ProjectOnlyIdErrorFromJSONTyped,
  ProjectOnlyIdErrorToJSON,
  ProjectOnlyIdErrorToJSONTyped,
} from './ProjectOnlyIdError';
import type { UserOnlyIdError } from './UserOnlyIdError';
import {
  UserOnlyIdErrorFromJSON,
  UserOnlyIdErrorFromJSONTyped,
  UserOnlyIdErrorToJSON,
  UserOnlyIdErrorToJSONTyped,
} from './UserOnlyIdError';
import type { GraphContentError } from './GraphContentError';
import {
  GraphContentErrorFromJSON,
  GraphContentErrorFromJSONTyped,
  GraphContentErrorToJSON,
  GraphContentErrorToJSONTyped,
} from './GraphContentError';
import type { ChapterOnlyIdError } from './ChapterOnlyIdError';
import {
  ChapterOnlyIdErrorFromJSON,
  ChapterOnlyIdErrorFromJSONTyped,
  ChapterOnlyIdErrorToJSON,
  ChapterOnlyIdErrorToJSONTyped,
} from './ChapterOnlyIdError';

/**
 * Error Response Body for Graph Update API
 * @export
 * @interface GraphUpdateErrorResponse
 */
export interface GraphUpdateErrorResponse {
  /**
   * Error message when request body format is invalid
   * @type {string}
   * @memberof GraphUpdateErrorResponse
   */
  message: string;
  /**
   *
   * @type {UserOnlyIdError}
   * @memberof GraphUpdateErrorResponse
   */
  user?: UserOnlyIdError;
  /**
   *
   * @type {ProjectOnlyIdError}
   * @memberof GraphUpdateErrorResponse
   */
  project?: ProjectOnlyIdError;
  /**
   *
   * @type {ChapterOnlyIdError}
   * @memberof GraphUpdateErrorResponse
   */
  chapter?: ChapterOnlyIdError;
  /**
   *
   * @type {GraphContentError}
   * @memberof GraphUpdateErrorResponse
   */
  graph?: GraphContentError;
}

/**
 * Check if a given object implements the GraphUpdateErrorResponse interface.
 */
export function instanceOfGraphUpdateErrorResponse(value: object): value is GraphUpdateErrorResponse {
  if (!('message' in value) || value['message'] === undefined) return false;
  return true;
}

export function GraphUpdateErrorResponseFromJSON(json: any): GraphUpdateErrorResponse {
  return GraphUpdateErrorResponseFromJSONTyped(json, false);
}

export function GraphUpdateErrorResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GraphUpdateErrorResponse {
  if (json == null) {
    return json;
  }
  return {
    message: json['message'],
    user: json['user'] == null ? undefined : UserOnlyIdErrorFromJSON(json['user']),
    project: json['project'] == null ? undefined : ProjectOnlyIdErrorFromJSON(json['project']),
    chapter: json['chapter'] == null ? undefined : ChapterOnlyIdErrorFromJSON(json['chapter']),
    graph: json['graph'] == null ? undefined : GraphContentErrorFromJSON(json['graph']),
  };
}

export function GraphUpdateErrorResponseToJSON(json: any): GraphUpdateErrorResponse {
  return GraphUpdateErrorResponseToJSONTyped(json, false);
}

export function GraphUpdateErrorResponseToJSONTyped(
  value?: GraphUpdateErrorResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    message: value['message'],
    user: UserOnlyIdErrorToJSON(value['user']),
    project: ProjectOnlyIdErrorToJSON(value['project']),
    chapter: ChapterOnlyIdErrorToJSON(value['chapter']),
    graph: GraphContentErrorToJSON(value['graph']),
  };
}
