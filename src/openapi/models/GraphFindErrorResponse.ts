/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Error Response Body for Graph Find API
 * @export
 * @interface GraphFindErrorResponse
 */
export interface GraphFindErrorResponse {
  /**
   * Error message when request body format is invalid
   * @type {string}
   * @memberof GraphFindErrorResponse
   */
  message: string;
  /**
   * Error message for user ID
   * @type {string}
   * @memberof GraphFindErrorResponse
   */
  userId?: string;
  /**
   * Error message for project ID
   * @type {string}
   * @memberof GraphFindErrorResponse
   */
  projectId?: string;
  /**
   * Error message for chapter ID
   * @type {string}
   * @memberof GraphFindErrorResponse
   */
  chapterId?: string;
  /**
   * Error message for section ID
   * @type {string}
   * @memberof GraphFindErrorResponse
   */
  sectionId?: string;
}

/**
 * Check if a given object implements the GraphFindErrorResponse interface.
 */
export function instanceOfGraphFindErrorResponse(value: object): value is GraphFindErrorResponse {
  if (!('message' in value) || value['message'] === undefined) return false;
  return true;
}

export function GraphFindErrorResponseFromJSON(json: any): GraphFindErrorResponse {
  return GraphFindErrorResponseFromJSONTyped(json, false);
}

export function GraphFindErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphFindErrorResponse {
  if (json == null) {
    return json;
  }
  return {
    message: json['message'],
    userId: json['userId'] == null ? undefined : json['userId'],
    projectId: json['projectId'] == null ? undefined : json['projectId'],
    chapterId: json['chapterId'] == null ? undefined : json['chapterId'],
    sectionId: json['sectionId'] == null ? undefined : json['sectionId'],
  };
}

export function GraphFindErrorResponseToJSON(json: any): GraphFindErrorResponse {
  return GraphFindErrorResponseToJSONTyped(json, false);
}

export function GraphFindErrorResponseToJSONTyped(
  value?: GraphFindErrorResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    message: value['message'],
    userId: value['userId'],
    projectId: value['projectId'],
    chapterId: value['chapterId'],
    sectionId: value['sectionId'],
  };
}
