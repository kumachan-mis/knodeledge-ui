/* eslint-disable */
/**
 * Web API of kNODEledge
 * App to Create Graphically-Summarized Notes in Three Steps
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserOnlyIdError } from './UserOnlyIdError';
import {
  UserOnlyIdErrorFromJSON,
  UserOnlyIdErrorFromJSONTyped,
  UserOnlyIdErrorToJSON,
  UserOnlyIdErrorToJSONTyped,
} from './UserOnlyIdError';
import type { ProjectWithoutAutofieldError } from './ProjectWithoutAutofieldError';
import {
  ProjectWithoutAutofieldErrorFromJSON,
  ProjectWithoutAutofieldErrorFromJSONTyped,
  ProjectWithoutAutofieldErrorToJSON,
  ProjectWithoutAutofieldErrorToJSONTyped,
} from './ProjectWithoutAutofieldError';

/**
 * Error Response Body for Project Create API
 * @export
 * @interface ProjectCreateErrorResponse
 */
export interface ProjectCreateErrorResponse {
  /**
   * Error message when request body format is invalid
   * @type {string}
   * @memberof ProjectCreateErrorResponse
   */
  message: string;
  /**
   *
   * @type {UserOnlyIdError}
   * @memberof ProjectCreateErrorResponse
   */
  user?: UserOnlyIdError;
  /**
   *
   * @type {ProjectWithoutAutofieldError}
   * @memberof ProjectCreateErrorResponse
   */
  project?: ProjectWithoutAutofieldError;
}

/**
 * Check if a given object implements the ProjectCreateErrorResponse interface.
 */
export function instanceOfProjectCreateErrorResponse(value: object): value is ProjectCreateErrorResponse {
  if (!('message' in value) || value['message'] === undefined) return false;
  return true;
}

export function ProjectCreateErrorResponseFromJSON(json: any): ProjectCreateErrorResponse {
  return ProjectCreateErrorResponseFromJSONTyped(json, false);
}

export function ProjectCreateErrorResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProjectCreateErrorResponse {
  if (json == null) {
    return json;
  }
  return {
    message: json['message'],
    user: json['user'] == null ? undefined : UserOnlyIdErrorFromJSON(json['user']),
    project: json['project'] == null ? undefined : ProjectWithoutAutofieldErrorFromJSON(json['project']),
  };
}

export function ProjectCreateErrorResponseToJSON(json: any): ProjectCreateErrorResponse {
  return ProjectCreateErrorResponseToJSONTyped(json, false);
}

export function ProjectCreateErrorResponseToJSONTyped(
  value?: ProjectCreateErrorResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    message: value['message'],
    user: UserOnlyIdErrorToJSON(value['user']),
    project: ProjectWithoutAutofieldErrorToJSON(value['project']),
  };
}
